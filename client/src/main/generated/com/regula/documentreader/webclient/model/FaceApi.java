/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.regula.documentreader.webclient.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.documentreader.webclient.JSON;
import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/** FaceApi */
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.12.0")
public class FaceApi {
  public static final String SERIALIZED_NAME_URL = "url";

  @SerializedName(SERIALIZED_NAME_URL)
  @javax.annotation.Nullable
  private String url;

  public static final String SERIALIZED_NAME_MODE = "mode";

  @SerializedName(SERIALIZED_NAME_MODE)
  @javax.annotation.Nullable
  private String mode;

  public static final String SERIALIZED_NAME_SEARCH = "search";

  @SerializedName(SERIALIZED_NAME_SEARCH)
  @javax.annotation.Nullable
  private FaceApiSearch search;

  public static final String SERIALIZED_NAME_THRESHOLD = "threshold";

  @SerializedName(SERIALIZED_NAME_THRESHOLD)
  @javax.annotation.Nullable
  private Integer threshold;

  public static final String SERIALIZED_NAME_SERVICE_TIMEOUT = "serviceTimeout";

  @SerializedName(SERIALIZED_NAME_SERVICE_TIMEOUT)
  @javax.annotation.Nullable
  private Integer serviceTimeout;

  public static final String SERIALIZED_NAME_PROXY = "proxy";

  @SerializedName(SERIALIZED_NAME_PROXY)
  @javax.annotation.Nullable
  private String proxy;

  public static final String SERIALIZED_NAME_PROXY_USERPWD = "proxy_userpwd";

  @SerializedName(SERIALIZED_NAME_PROXY_USERPWD)
  @javax.annotation.Nullable
  private String proxyUserpwd;

  public static final String SERIALIZED_NAME_PROXY_TYPE = "proxy_type";

  @SerializedName(SERIALIZED_NAME_PROXY_TYPE)
  @javax.annotation.Nullable
  private Integer proxyType;

  public static final String SERIALIZED_NAME_CHILD_AGE_THRESHOLD = "childAgeThreshold";

  @SerializedName(SERIALIZED_NAME_CHILD_AGE_THRESHOLD)
  @javax.annotation.Nullable
  private Integer childAgeThreshold;

  public static final String SERIALIZED_NAME_CHILD_DOC_VALIDITY_YEARS = "childDocValidityYears";

  @SerializedName(SERIALIZED_NAME_CHILD_DOC_VALIDITY_YEARS)
  @javax.annotation.Nullable
  private Integer childDocValidityYears;

  public FaceApi() {}

  public FaceApi url(@javax.annotation.Nullable String url) {
    this.url = url;
    return this;
  }

  /**
   * The URL of the Regula Face Web service to be used.
   *
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(@javax.annotation.Nullable String url) {
    this.url = url;
  }

  public FaceApi mode(@javax.annotation.Nullable String mode) {
    this.mode = mode;
    return this;
  }

  /**
   * The processing mode: \&quot;match\&quot; or \&quot;match+search\&quot;.
   *
   * @return mode
   */
  @javax.annotation.Nullable
  public String getMode() {
    return mode;
  }

  public void setMode(@javax.annotation.Nullable String mode) {
    this.mode = mode;
  }

  public FaceApi search(@javax.annotation.Nullable FaceApiSearch search) {
    this.search = search;
    return this;
  }

  /**
   * Get search
   *
   * @return search
   */
  @javax.annotation.Nullable
  public FaceApiSearch getSearch() {
    return search;
  }

  public void setSearch(@javax.annotation.Nullable FaceApiSearch search) {
    this.search = search;
  }

  public FaceApi threshold(@javax.annotation.Nullable Integer threshold) {
    this.threshold = threshold;
    return this;
  }

  /**
   * The similarity threshold, 0-100. Above 75 means that the faces&#39; similarity is verified,
   * below 75 is not.
   *
   * @return threshold
   */
  @javax.annotation.Nullable
  public Integer getThreshold() {
    return threshold;
  }

  public void setThreshold(@javax.annotation.Nullable Integer threshold) {
    this.threshold = threshold;
  }

  public FaceApi serviceTimeout(@javax.annotation.Nullable Integer serviceTimeout) {
    this.serviceTimeout = serviceTimeout;
    return this;
  }

  /**
   * The Regula Face Web service requests timeout, ms.
   *
   * @return serviceTimeout
   */
  @javax.annotation.Nullable
  public Integer getServiceTimeout() {
    return serviceTimeout;
  }

  public void setServiceTimeout(@javax.annotation.Nullable Integer serviceTimeout) {
    this.serviceTimeout = serviceTimeout;
  }

  public FaceApi proxy(@javax.annotation.Nullable String proxy) {
    this.proxy = proxy;
    return this;
  }

  /**
   * Proxy to use, should be set according to the &lt;a
   * href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXY.html\&quot;
   * target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.
   *
   * @return proxy
   */
  @javax.annotation.Nullable
  public String getProxy() {
    return proxy;
  }

  public void setProxy(@javax.annotation.Nullable String proxy) {
    this.proxy = proxy;
  }

  public FaceApi proxyUserpwd(@javax.annotation.Nullable String proxyUserpwd) {
    this.proxyUserpwd = proxyUserpwd;
    return this;
  }

  /**
   * Username and password to use for proxy authentication, should be set according to the &lt;a
   * href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXYUSERPWD.html\&quot;
   * target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.
   *
   * @return proxyUserpwd
   */
  @javax.annotation.Nullable
  public String getProxyUserpwd() {
    return proxyUserpwd;
  }

  public void setProxyUserpwd(@javax.annotation.Nullable String proxyUserpwd) {
    this.proxyUserpwd = proxyUserpwd;
  }

  public FaceApi proxyType(@javax.annotation.Nullable Integer proxyType) {
    this.proxyType = proxyType;
    return this;
  }

  /**
   * Proxy protocol type, should be set according to the &lt;a
   * href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXYTYPE.html\&quot;
   * target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.
   *
   * @return proxyType
   */
  @javax.annotation.Nullable
  public Integer getProxyType() {
    return proxyType;
  }

  public void setProxyType(@javax.annotation.Nullable Integer proxyType) {
    this.proxyType = proxyType;
  }

  public FaceApi childAgeThreshold(@javax.annotation.Nullable Integer childAgeThreshold) {
    this.childAgeThreshold = childAgeThreshold;
    return this;
  }

  /**
   * Minimum age of a child, at which portrait comparison result will be effective. Default: 13.
   *
   * @return childAgeThreshold
   */
  @javax.annotation.Nullable
  public Integer getChildAgeThreshold() {
    return childAgeThreshold;
  }

  public void setChildAgeThreshold(@javax.annotation.Nullable Integer childAgeThreshold) {
    this.childAgeThreshold = childAgeThreshold;
  }

  public FaceApi childDocValidityYears(@javax.annotation.Nullable Integer childDocValidityYears) {
    this.childDocValidityYears = childDocValidityYears;
    return this;
  }

  /**
   * Estimated duration of validity for a child&#39;s passport, years. Default: 5.
   *
   * @return childDocValidityYears
   */
  @javax.annotation.Nullable
  public Integer getChildDocValidityYears() {
    return childDocValidityYears;
  }

  public void setChildDocValidityYears(@javax.annotation.Nullable Integer childDocValidityYears) {
    this.childDocValidityYears = childDocValidityYears;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FaceApi faceApi = (FaceApi) o;
    return Objects.equals(this.url, faceApi.url)
        && Objects.equals(this.mode, faceApi.mode)
        && Objects.equals(this.search, faceApi.search)
        && Objects.equals(this.threshold, faceApi.threshold)
        && Objects.equals(this.serviceTimeout, faceApi.serviceTimeout)
        && Objects.equals(this.proxy, faceApi.proxy)
        && Objects.equals(this.proxyUserpwd, faceApi.proxyUserpwd)
        && Objects.equals(this.proxyType, faceApi.proxyType)
        && Objects.equals(this.childAgeThreshold, faceApi.childAgeThreshold)
        && Objects.equals(this.childDocValidityYears, faceApi.childDocValidityYears);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        url,
        mode,
        search,
        threshold,
        serviceTimeout,
        proxy,
        proxyUserpwd,
        proxyType,
        childAgeThreshold,
        childDocValidityYears);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FaceApi {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    search: ").append(toIndentedString(search)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("    serviceTimeout: ").append(toIndentedString(serviceTimeout)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    proxyUserpwd: ").append(toIndentedString(proxyUserpwd)).append("\n");
    sb.append("    proxyType: ").append(toIndentedString(proxyType)).append("\n");
    sb.append("    childAgeThreshold: ").append(toIndentedString(childAgeThreshold)).append("\n");
    sb.append("    childDocValidityYears: ")
        .append(toIndentedString(childDocValidityYears))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("url");
    openapiFields.add("mode");
    openapiFields.add("search");
    openapiFields.add("threshold");
    openapiFields.add("serviceTimeout");
    openapiFields.add("proxy");
    openapiFields.add("proxy_userpwd");
    openapiFields.add("proxy_type");
    openapiFields.add("childAgeThreshold");
    openapiFields.add("childDocValidityYears");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FaceApi
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    if (jsonElement == null) {
      if (!FaceApi.openapiRequiredFields
          .isEmpty()) { // has required fields but JSON element is null
        throw new IllegalArgumentException(
            String.format(
                "The required field(s) %s in FaceApi is not found in the empty JSON string",
                FaceApi.openapiRequiredFields.toString()));
      }
    }

    Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
    // check to see if the JSON string contains additional fields
    for (Map.Entry<String, JsonElement> entry : entries) {
      if (!FaceApi.openapiFields.contains(entry.getKey())) {
        throw new IllegalArgumentException(
            String.format(
                "The field `%s` in the JSON string is not defined in the `FaceApi` properties. JSON: %s",
                entry.getKey(), jsonElement.toString()));
      }
    }
    JsonObject jsonObj = jsonElement.getAsJsonObject();
    if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull())
        && !jsonObj.get("url").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `url` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("url").toString()));
    }
    if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull())
        && !jsonObj.get("mode").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `mode` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("mode").toString()));
    }
    // validate the optional field `search`
    if (jsonObj.get("search") != null && !jsonObj.get("search").isJsonNull()) {
      FaceApiSearch.validateJsonElement(jsonObj.get("search"));
    }
    if ((jsonObj.get("proxy") != null && !jsonObj.get("proxy").isJsonNull())
        && !jsonObj.get("proxy").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `proxy` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("proxy").toString()));
    }
    if ((jsonObj.get("proxy_userpwd") != null && !jsonObj.get("proxy_userpwd").isJsonNull())
        && !jsonObj.get("proxy_userpwd").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `proxy_userpwd` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("proxy_userpwd").toString()));
    }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
      if (!FaceApi.class.isAssignableFrom(type.getRawType())) {
        return null; // this class only serializes 'FaceApi' and its subtypes
      }
      final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
      final TypeAdapter<FaceApi> thisAdapter =
          gson.getDelegateAdapter(this, TypeToken.get(FaceApi.class));

      return (TypeAdapter<T>)
          new TypeAdapter<FaceApi>() {
            @Override
            public void write(JsonWriter out, FaceApi value) throws IOException {
              JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
              elementAdapter.write(out, obj);
            }

            @Override
            public FaceApi read(JsonReader in) throws IOException {
              JsonElement jsonElement = elementAdapter.read(in);
              validateJsonElement(jsonElement);
              return thisAdapter.fromJsonTree(jsonElement);
            }
          }.nullSafe();
    }
  }

  /**
   * Create an instance of FaceApi given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FaceApi
   * @throws IOException if the JSON string is invalid with respect to FaceApi
   */
  public static FaceApi fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FaceApi.class);
  }

  /**
   * Convert an instance of FaceApi to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}
