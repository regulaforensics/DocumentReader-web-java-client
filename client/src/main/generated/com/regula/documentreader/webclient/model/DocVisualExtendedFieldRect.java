/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.regula.documentreader.webclient.model;

import com.google.gson.annotations.SerializedName;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Structure and serves for storing information from one text data field. Variant with field logical
 * type and field rectangular area coordinates on the image.
 */
public class DocVisualExtendedFieldRect {
  public static final String SERIALIZED_NAME_FIELD_RECT = "FieldRect";

  @SerializedName(SERIALIZED_NAME_FIELD_RECT)
  private RectangleCoordinates fieldRect;

  public static final String SERIALIZED_NAME_FIELD_TYPE = "FieldType";

  @SerializedName(SERIALIZED_NAME_FIELD_TYPE)
  private Object fieldType = null;

  public static final String SERIALIZED_NAME_W_FIELD_TYPE = "wFieldType";

  @SerializedName(SERIALIZED_NAME_W_FIELD_TYPE)
  private Integer wFieldType;

  public static final String SERIALIZED_NAME_FIELD_NAME = "FieldName";

  @SerializedName(SERIALIZED_NAME_FIELD_NAME)
  private String fieldName;

  public static final String SERIALIZED_NAME_STRINGS_COUNT = "StringsCount";

  @SerializedName(SERIALIZED_NAME_STRINGS_COUNT)
  private BigDecimal stringsCount;

  public static final String SERIALIZED_NAME_STRINGS_RESULT = "StringsResult";

  @SerializedName(SERIALIZED_NAME_STRINGS_RESULT)
  private List<StringRecognitionResult> stringsResult = new ArrayList<StringRecognitionResult>();

  public static final String SERIALIZED_NAME_BUF_LENGTH = "Buf_Length";

  @SerializedName(SERIALIZED_NAME_BUF_LENGTH)
  private BigDecimal bufLength;

  public static final String SERIALIZED_NAME_BUF_TEXT = "Buf_Text";

  @SerializedName(SERIALIZED_NAME_BUF_TEXT)
  private String bufText;

  public static final String SERIALIZED_NAME_FIELD_MASK = "FieldMask";

  @SerializedName(SERIALIZED_NAME_FIELD_MASK)
  private Object fieldMask = null;

  public static final String SERIALIZED_NAME_VALIDITY = "Validity";

  @SerializedName(SERIALIZED_NAME_VALIDITY)
  private Object validity = null;

  public static final String SERIALIZED_NAME_IN_COMPARISON = "InComparison";

  @SerializedName(SERIALIZED_NAME_IN_COMPARISON)
  private Object inComparison = null;

  public static final String SERIALIZED_NAME_RESERVED2 = "Reserved2";

  @SerializedName(SERIALIZED_NAME_RESERVED2)
  private Object reserved2 = null;

  public static final String SERIALIZED_NAME_RESERVED3 = "Reserved3";

  @SerializedName(SERIALIZED_NAME_RESERVED3)
  private Object reserved3 = null;

  public DocVisualExtendedFieldRect withFieldRect(RectangleCoordinates fieldRect) {
    this.fieldRect = fieldRect;
    return this;
  }

  /**
   * Get fieldRect
   *
   * @return fieldRect
   */
  @javax.annotation.Nullable
  public RectangleCoordinates getFieldRect() {
    return fieldRect;
  }

  public void setFieldRect(RectangleCoordinates fieldRect) {
    this.fieldRect = fieldRect;
  }

  public DocVisualExtendedFieldRect withFieldType(Object fieldType) {
    this.fieldType = fieldType;
    return this;
  }

  /**
   * Get fieldType
   *
   * @return fieldType
   */
  @javax.annotation.Nullable
  public Object getFieldType() {
    return fieldType;
  }

  public void setFieldType(Object fieldType) {
    this.fieldType = fieldType;
  }

  public DocVisualExtendedFieldRect withWFieldType(Integer wFieldType) {
    this.wFieldType = wFieldType;
    return this;
  }

  /**
   * Get wFieldType
   *
   * @return wFieldType
   */
  public Integer getwFieldType() {
    return wFieldType;
  }

  public void setwFieldType(Integer wFieldType) {
    this.wFieldType = wFieldType;
  }

  public DocVisualExtendedFieldRect withFieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

  /**
   * Field symbolic name (null-terminated string)
   *
   * @return fieldName
   */
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public DocVisualExtendedFieldRect withStringsCount(BigDecimal stringsCount) {
    this.stringsCount = stringsCount;
    return this;
  }

  /**
   * Number of StringsResult array elements
   *
   * @return stringsCount
   */
  public BigDecimal getStringsCount() {
    return stringsCount;
  }

  public void setStringsCount(BigDecimal stringsCount) {
    this.stringsCount = stringsCount;
  }

  public DocVisualExtendedFieldRect withStringsResult(List<StringRecognitionResult> stringsResult) {
    this.stringsResult = stringsResult;
    return this;
  }

  public DocVisualExtendedFieldRect addStringsResultItem(
      StringRecognitionResult stringsResultItem) {
    this.stringsResult.add(stringsResultItem);
    return this;
  }

  /**
   * Array of recognizing probabilities for a each line of text field. Only for Result.VISUAL_TEXT
   * and Result.MRZ_TEXT results.
   *
   * @return stringsResult
   */
  public List<StringRecognitionResult> getStringsResult() {
    return stringsResult;
  }

  public void setStringsResult(List<StringRecognitionResult> stringsResult) {
    this.stringsResult = stringsResult;
  }

  public DocVisualExtendedFieldRect withBufLength(BigDecimal bufLength) {
    this.bufLength = bufLength;
    return this;
  }

  /**
   * Buf_Text text string length
   *
   * @return bufLength
   */
  public BigDecimal getBufLength() {
    return bufLength;
  }

  public void setBufLength(BigDecimal bufLength) {
    this.bufLength = bufLength;
  }

  public DocVisualExtendedFieldRect withBufText(String bufText) {
    this.bufText = bufText;
    return this;
  }

  /**
   * Text field data in UTF8 format. Results of reading different lines of a multi-line field are
   * separated by &#39;^&#39;
   *
   * @return bufText
   */
  public String getBufText() {
    return bufText;
  }

  public void setBufText(String bufText) {
    this.bufText = bufText;
  }

  public DocVisualExtendedFieldRect withFieldMask(Object fieldMask) {
    this.fieldMask = fieldMask;
    return this;
  }

  /**
   * Get fieldMask
   *
   * @return fieldMask
   */
  @javax.annotation.Nullable
  public Object getFieldMask() {
    return fieldMask;
  }

  public void setFieldMask(Object fieldMask) {
    this.fieldMask = fieldMask;
  }

  public DocVisualExtendedFieldRect withValidity(Object validity) {
    this.validity = validity;
    return this;
  }

  /**
   * Get validity
   *
   * @return validity
   */
  @javax.annotation.Nullable
  public Object getValidity() {
    return validity;
  }

  public void setValidity(Object validity) {
    this.validity = validity;
  }

  public DocVisualExtendedFieldRect withInComparison(Object inComparison) {
    this.inComparison = inComparison;
    return this;
  }

  /**
   * Get inComparison
   *
   * @return inComparison
   */
  @javax.annotation.Nullable
  public Object getInComparison() {
    return inComparison;
  }

  public void setInComparison(Object inComparison) {
    this.inComparison = inComparison;
  }

  public DocVisualExtendedFieldRect withReserved2(Object reserved2) {
    this.reserved2 = reserved2;
    return this;
  }

  /**
   * Get reserved2
   *
   * @return reserved2
   */
  @javax.annotation.Nullable
  public Object getReserved2() {
    return reserved2;
  }

  public void setReserved2(Object reserved2) {
    this.reserved2 = reserved2;
  }

  public DocVisualExtendedFieldRect withReserved3(Object reserved3) {
    this.reserved3 = reserved3;
    return this;
  }

  /**
   * Get reserved3
   *
   * @return reserved3
   */
  @javax.annotation.Nullable
  public Object getReserved3() {
    return reserved3;
  }

  public void setReserved3(Object reserved3) {
    this.reserved3 = reserved3;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocVisualExtendedFieldRect docVisualExtendedFieldRect = (DocVisualExtendedFieldRect) o;
    return Objects.equals(this.fieldRect, docVisualExtendedFieldRect.fieldRect)
        && Objects.equals(this.fieldType, docVisualExtendedFieldRect.fieldType)
        && Objects.equals(this.wFieldType, docVisualExtendedFieldRect.wFieldType)
        && Objects.equals(this.fieldName, docVisualExtendedFieldRect.fieldName)
        && Objects.equals(this.stringsCount, docVisualExtendedFieldRect.stringsCount)
        && Objects.equals(this.stringsResult, docVisualExtendedFieldRect.stringsResult)
        && Objects.equals(this.bufLength, docVisualExtendedFieldRect.bufLength)
        && Objects.equals(this.bufText, docVisualExtendedFieldRect.bufText)
        && Objects.equals(this.fieldMask, docVisualExtendedFieldRect.fieldMask)
        && Objects.equals(this.validity, docVisualExtendedFieldRect.validity)
        && Objects.equals(this.inComparison, docVisualExtendedFieldRect.inComparison)
        && Objects.equals(this.reserved2, docVisualExtendedFieldRect.reserved2)
        && Objects.equals(this.reserved3, docVisualExtendedFieldRect.reserved3);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        fieldRect,
        fieldType,
        wFieldType,
        fieldName,
        stringsCount,
        stringsResult,
        bufLength,
        bufText,
        fieldMask,
        validity,
        inComparison,
        reserved2,
        reserved3);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocVisualExtendedFieldRect {\n");
    sb.append("    fieldRect: ").append(toIndentedString(fieldRect)).append("\n");
    sb.append("    fieldType: ").append(toIndentedString(fieldType)).append("\n");
    sb.append("    wFieldType: ").append(toIndentedString(wFieldType)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    stringsCount: ").append(toIndentedString(stringsCount)).append("\n");
    sb.append("    stringsResult: ").append(toIndentedString(stringsResult)).append("\n");
    sb.append("    bufLength: ").append(toIndentedString(bufLength)).append("\n");
    sb.append("    bufText: ").append(toIndentedString(bufText)).append("\n");
    sb.append("    fieldMask: ").append(toIndentedString(fieldMask)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    inComparison: ").append(toIndentedString(inComparison)).append("\n");
    sb.append("    reserved2: ").append(toIndentedString(reserved2)).append("\n");
    sb.append("    reserved3: ").append(toIndentedString(reserved3)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
