/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 8.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.regula.documentreader.webclient.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.documentreader.webclient.JSON;
import java.io.IOException;
import java.util.HashSet;
import java.util.Objects;

/** TransactionInfo */
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.12.0")
public class TransactionInfo {
  public static final String SERIALIZED_NAME_COMPUTER_NAME = "ComputerName";

  @SerializedName(SERIALIZED_NAME_COMPUTER_NAME)
  @javax.annotation.Nullable
  private String computerName;

  public static final String SERIALIZED_NAME_DATE_TIME = "DateTime";

  @SerializedName(SERIALIZED_NAME_DATE_TIME)
  @javax.annotation.Nullable
  private String dateTime;

  public static final String SERIALIZED_NAME_DOCUMENTS_DATABASE = "DocumentsDatabase";

  @SerializedName(SERIALIZED_NAME_DOCUMENTS_DATABASE)
  @javax.annotation.Nullable
  private DocumentsDatabase documentsDatabase;

  public static final String SERIALIZED_NAME_SYSTEM_INFO = "SystemInfo";

  @SerializedName(SERIALIZED_NAME_SYSTEM_INFO)
  @javax.annotation.Nullable
  private String systemInfo;

  public static final String SERIALIZED_NAME_TAG = "Tag";

  @SerializedName(SERIALIZED_NAME_TAG)
  @javax.annotation.Nullable
  private String tag;

  public static final String SERIALIZED_NAME_TRANSACTION_I_D = "TransactionID";

  @SerializedName(SERIALIZED_NAME_TRANSACTION_I_D)
  @javax.annotation.Nullable
  private String transactionID;

  public static final String SERIALIZED_NAME_USER_NAME = "UserName";

  @SerializedName(SERIALIZED_NAME_USER_NAME)
  @javax.annotation.Nullable
  private String userName;

  public static final String SERIALIZED_NAME_VERSION = "Version";

  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nullable
  private String version;

  public TransactionInfo() {}

  public TransactionInfo computerName(@javax.annotation.Nullable String computerName) {
    this.computerName = computerName;
    return this;
  }

  /**
   * Computer name
   *
   * @return computerName
   */
  @javax.annotation.Nullable
  public String getComputerName() {
    return computerName;
  }

  public void setComputerName(@javax.annotation.Nullable String computerName) {
    this.computerName = computerName;
  }

  public TransactionInfo dateTime(@javax.annotation.Nullable String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

  /**
   * Date and time
   *
   * @return dateTime
   */
  @javax.annotation.Nullable
  public String getDateTime() {
    return dateTime;
  }

  public void setDateTime(@javax.annotation.Nullable String dateTime) {
    this.dateTime = dateTime;
  }

  public TransactionInfo documentsDatabase(
      @javax.annotation.Nullable DocumentsDatabase documentsDatabase) {
    this.documentsDatabase = documentsDatabase;
    return this;
  }

  /**
   * Get documentsDatabase
   *
   * @return documentsDatabase
   */
  @javax.annotation.Nullable
  public DocumentsDatabase getDocumentsDatabase() {
    return documentsDatabase;
  }

  public void setDocumentsDatabase(@javax.annotation.Nullable DocumentsDatabase documentsDatabase) {
    this.documentsDatabase = documentsDatabase;
  }

  public TransactionInfo systemInfo(@javax.annotation.Nullable String systemInfo) {
    this.systemInfo = systemInfo;
    return this;
  }

  /**
   * System information
   *
   * @return systemInfo
   */
  @javax.annotation.Nullable
  public String getSystemInfo() {
    return systemInfo;
  }

  public void setSystemInfo(@javax.annotation.Nullable String systemInfo) {
    this.systemInfo = systemInfo;
  }

  public TransactionInfo tag(@javax.annotation.Nullable String tag) {
    this.tag = tag;
    return this;
  }

  /**
   * Transaction tag
   *
   * @return tag
   */
  @javax.annotation.Nullable
  public String getTag() {
    return tag;
  }

  public void setTag(@javax.annotation.Nullable String tag) {
    this.tag = tag;
  }

  public TransactionInfo transactionID(@javax.annotation.Nullable String transactionID) {
    this.transactionID = transactionID;
    return this;
  }

  /**
   * Transaction identifier
   *
   * @return transactionID
   */
  @javax.annotation.Nullable
  public String getTransactionID() {
    return transactionID;
  }

  public void setTransactionID(@javax.annotation.Nullable String transactionID) {
    this.transactionID = transactionID;
  }

  public TransactionInfo userName(@javax.annotation.Nullable String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * User name
   *
   * @return userName
   */
  @javax.annotation.Nullable
  public String getUserName() {
    return userName;
  }

  public void setUserName(@javax.annotation.Nullable String userName) {
    this.userName = userName;
  }

  public TransactionInfo version(@javax.annotation.Nullable String version) {
    this.version = version;
    return this;
  }

  /**
   * SDK version
   *
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nullable String version) {
    this.version = version;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionInfo transactionInfo = (TransactionInfo) o;
    return Objects.equals(this.computerName, transactionInfo.computerName)
        && Objects.equals(this.dateTime, transactionInfo.dateTime)
        && Objects.equals(this.documentsDatabase, transactionInfo.documentsDatabase)
        && Objects.equals(this.systemInfo, transactionInfo.systemInfo)
        && Objects.equals(this.tag, transactionInfo.tag)
        && Objects.equals(this.transactionID, transactionInfo.transactionID)
        && Objects.equals(this.userName, transactionInfo.userName)
        && Objects.equals(this.version, transactionInfo.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        computerName,
        dateTime,
        documentsDatabase,
        systemInfo,
        tag,
        transactionID,
        userName,
        version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionInfo {\n");
    sb.append("    computerName: ").append(toIndentedString(computerName)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    documentsDatabase: ").append(toIndentedString(documentsDatabase)).append("\n");
    sb.append("    systemInfo: ").append(toIndentedString(systemInfo)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    transactionID: ").append(toIndentedString(transactionID)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ComputerName");
    openapiFields.add("DateTime");
    openapiFields.add("DocumentsDatabase");
    openapiFields.add("SystemInfo");
    openapiFields.add("Tag");
    openapiFields.add("TransactionID");
    openapiFields.add("UserName");
    openapiFields.add("Version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TransactionInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    if (jsonElement == null) {
      if (!TransactionInfo.openapiRequiredFields
          .isEmpty()) { // has required fields but JSON element is null
        throw new IllegalArgumentException(
            String.format(
                "The required field(s) %s in TransactionInfo is not found in the empty JSON string",
                TransactionInfo.openapiRequiredFields.toString()));
      }
    }

    JsonObject jsonObj = jsonElement.getAsJsonObject();
    if ((jsonObj.get("ComputerName") != null && !jsonObj.get("ComputerName").isJsonNull())
        && !jsonObj.get("ComputerName").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `ComputerName` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("ComputerName").toString()));
    }
    if ((jsonObj.get("DateTime") != null && !jsonObj.get("DateTime").isJsonNull())
        && !jsonObj.get("DateTime").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `DateTime` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("DateTime").toString()));
    }
    // validate the optional field `DocumentsDatabase`
    if (jsonObj.get("DocumentsDatabase") != null
        && !jsonObj.get("DocumentsDatabase").isJsonNull()) {
      DocumentsDatabase.validateJsonElement(jsonObj.get("DocumentsDatabase"));
    }
    if ((jsonObj.get("SystemInfo") != null && !jsonObj.get("SystemInfo").isJsonNull())
        && !jsonObj.get("SystemInfo").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `SystemInfo` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("SystemInfo").toString()));
    }
    if ((jsonObj.get("Tag") != null && !jsonObj.get("Tag").isJsonNull())
        && !jsonObj.get("Tag").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `Tag` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("Tag").toString()));
    }
    if ((jsonObj.get("TransactionID") != null && !jsonObj.get("TransactionID").isJsonNull())
        && !jsonObj.get("TransactionID").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `TransactionID` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("TransactionID").toString()));
    }
    if ((jsonObj.get("UserName") != null && !jsonObj.get("UserName").isJsonNull())
        && !jsonObj.get("UserName").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `UserName` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("UserName").toString()));
    }
    if ((jsonObj.get("Version") != null && !jsonObj.get("Version").isJsonNull())
        && !jsonObj.get("Version").isJsonPrimitive()) {
      throw new IllegalArgumentException(
          String.format(
              "Expected the field `Version` to be a primitive type in the JSON string but got `%s`",
              jsonObj.get("Version").toString()));
    }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
      if (!TransactionInfo.class.isAssignableFrom(type.getRawType())) {
        return null; // this class only serializes 'TransactionInfo' and its subtypes
      }
      final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
      final TypeAdapter<TransactionInfo> thisAdapter =
          gson.getDelegateAdapter(this, TypeToken.get(TransactionInfo.class));

      return (TypeAdapter<T>)
          new TypeAdapter<TransactionInfo>() {
            @Override
            public void write(JsonWriter out, TransactionInfo value) throws IOException {
              JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
              elementAdapter.write(out, obj);
            }

            @Override
            public TransactionInfo read(JsonReader in) throws IOException {
              JsonElement jsonElement = elementAdapter.read(in);
              validateJsonElement(jsonElement);
              return thisAdapter.fromJsonTree(jsonElement);
            }
          }.nullSafe();
    }
  }

  /**
   * Create an instance of TransactionInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TransactionInfo
   * @throws IOException if the JSON string is invalid with respect to TransactionInfo
   */
  public static TransactionInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransactionInfo.class);
  }

  /**
   * Convert an instance of TransactionInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}
