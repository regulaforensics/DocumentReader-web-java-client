/*
 * Regula Document Reader Web API
 * Regula Document Reader Web API
 *
 * The version of the OpenAPI document: 5.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.regula.documentreader.webclient.model;

import com.google.gson.annotations.SerializedName;
import java.util.Objects;

/** ImagesAvailableSource */
public class ImagesAvailableSource {
  public static final String SERIALIZED_NAME_CONTAINER_TYPE = "containerType";

  @SerializedName(SERIALIZED_NAME_CONTAINER_TYPE)
  private int containerType;

  public static final String SERIALIZED_NAME_SOURCE = "source";

  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public ImagesAvailableSource withContainerType(int containerType) {
    this.containerType = containerType;
    return this;
  }

  /**
   * Get containerType
   *
   * @return containerType
   */
  @javax.annotation.Nullable
  public int getContainerType() {
    return containerType;
  }

  public void setContainerType(int containerType) {
    this.containerType = containerType;
  }

  public ImagesAvailableSource withSource(String source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   *
   * @return source
   */
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImagesAvailableSource imagesAvailableSource = (ImagesAvailableSource) o;
    return Objects.equals(this.containerType, imagesAvailableSource.containerType)
        && Objects.equals(this.source, imagesAvailableSource.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containerType, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImagesAvailableSource {\n");
    sb.append("    containerType: ").append(toIndentedString(containerType)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
