/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.regula.documentreader.webclient.model;

import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** OutData */
public class OutData {
  public static final String SERIALIZED_NAME_URL = "url";

  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_IMAGES = "images";

  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<OutDataTransactionImagesFieldValue> images = null;

  public OutData withUrl(String url) {
    this.url = url;
    return this;
  }

  /**
   * Response url
   *
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public OutData withImages(List<OutDataTransactionImagesFieldValue> images) {
    this.images = images;
    return this;
  }

  public OutData addImagesItem(OutDataTransactionImagesFieldValue imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<OutDataTransactionImagesFieldValue>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * Get images
   *
   * @return images
   */
  @javax.annotation.Nullable
  public List<OutDataTransactionImagesFieldValue> getImages() {
    return images;
  }

  public void setImages(List<OutDataTransactionImagesFieldValue> images) {
    this.images = images;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutData outData = (OutData) o;
    return Objects.equals(this.url, outData.url) && Objects.equals(this.images, outData.images);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, images);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutData {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
