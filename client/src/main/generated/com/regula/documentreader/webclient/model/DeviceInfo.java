/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.documentreader.webclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;


/**
* DeviceInfo
*/
public class DeviceInfo {
        public static final String SERIALIZED_NAME_APP = "app";
        @SerializedName(SERIALIZED_NAME_APP)
            private String app;



        public static final String SERIALIZED_NAME_LICENSE_ID = "licenseId";
        @SerializedName(SERIALIZED_NAME_LICENSE_ID)
            private String licenseId;



        public static final String SERIALIZED_NAME_LICENSE_TYPE = "licenseType";
        @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
            private String licenseType;



        public static final String SERIALIZED_NAME_LICENSE_SERIAL = "licenseSerial";
        @SerializedName(SERIALIZED_NAME_LICENSE_SERIAL)
            private String licenseSerial;



        public static final String SERIALIZED_NAME_LICENSE_VALID_UNTIL = "licenseValidUntil";
        @SerializedName(SERIALIZED_NAME_LICENSE_VALID_UNTIL)
            private OffsetDateTime licenseValidUntil;



        public static final String SERIALIZED_NAME_SCENARIOS = "scenarios";
        @SerializedName(SERIALIZED_NAME_SCENARIOS)
                private List<String> scenarios = null;



        public static final String SERIALIZED_NAME_VERSION = "version";
        @SerializedName(SERIALIZED_NAME_VERSION)
            private String version;




            public DeviceInfo withApp(String app) {
              this.app = app;
              return this;
            }


    /**
        * Get app
    * @return app
    **/
        @javax.annotation.Nullable
    
    

        public String getApp() {
        return app;
    }


            public void setApp(String app) {
            this.app = app;
        }


            public DeviceInfo withLicenseId(String licenseId) {
              this.licenseId = licenseId;
              return this;
            }


    /**
        * Get licenseId
    * @return licenseId
    **/
        @javax.annotation.Nullable
    
    

        public String getLicenseId() {
        return licenseId;
    }


            public void setLicenseId(String licenseId) {
            this.licenseId = licenseId;
        }


            public DeviceInfo withLicenseType(String licenseType) {
              this.licenseType = licenseType;
              return this;
            }


    /**
        * Get licenseType
    * @return licenseType
    **/
        @javax.annotation.Nullable
    
    

        public String getLicenseType() {
        return licenseType;
    }


            public void setLicenseType(String licenseType) {
            this.licenseType = licenseType;
        }


            public DeviceInfo withLicenseSerial(String licenseSerial) {
              this.licenseSerial = licenseSerial;
              return this;
            }


    /**
        * Get licenseSerial
    * @return licenseSerial
    **/
        @javax.annotation.Nullable
    
    

        public String getLicenseSerial() {
        return licenseSerial;
    }


            public void setLicenseSerial(String licenseSerial) {
            this.licenseSerial = licenseSerial;
        }


            public DeviceInfo withLicenseValidUntil(OffsetDateTime licenseValidUntil) {
              this.licenseValidUntil = licenseValidUntil;
              return this;
            }


    /**
        * Get licenseValidUntil
    * @return licenseValidUntil
    **/
        @javax.annotation.Nullable
    
    

        public OffsetDateTime getLicenseValidUntil() {
        return licenseValidUntil;
    }


            public void setLicenseValidUntil(OffsetDateTime licenseValidUntil) {
            this.licenseValidUntil = licenseValidUntil;
        }


            public DeviceInfo withScenarios(List<String> scenarios) {
              this.scenarios = scenarios;
              return this;
            }

            public DeviceInfo addScenariosItem(String scenariosItem) {
                    if (this.scenarios == null) {
                    this.scenarios = new ArrayList<String>();
                    }
                this.scenarios.add(scenariosItem);
                return this;
            }

    /**
        * Get scenarios
    * @return scenarios
    **/
        @javax.annotation.Nullable
    
    

        public  List<String> getScenarios() {
        return scenarios;
    }


            public void setScenarios(List<String> scenarios) {
            this.scenarios = scenarios;
        }


            public DeviceInfo withVersion(String version) {
              this.version = version;
              return this;
            }


    /**
        * Get version
    * @return version
    **/
        @javax.annotation.Nullable
    
    

        public String getVersion() {
        return version;
    }


            public void setVersion(String version) {
            this.version = version;
        }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
        return true;
        }
        if (o == null || getClass() != o.getClass()) {
        return false;
        }
            DeviceInfo deviceInfo = (DeviceInfo) o;
            return Objects.equals(this.app, deviceInfo.app) &&
            Objects.equals(this.licenseId, deviceInfo.licenseId) &&
            Objects.equals(this.licenseType, deviceInfo.licenseType) &&
            Objects.equals(this.licenseSerial, deviceInfo.licenseSerial) &&
            Objects.equals(this.licenseValidUntil, deviceInfo.licenseValidUntil) &&
            Objects.equals(this.scenarios, deviceInfo.scenarios) &&
            Objects.equals(this.version, deviceInfo.version);
    }

    @Override
    public int hashCode() {
        return Objects.hash(app, licenseId, licenseType, licenseSerial, licenseValidUntil, scenarios, version);
    }


@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class DeviceInfo {\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    licenseId: ").append(toIndentedString(licenseId)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    licenseSerial: ").append(toIndentedString(licenseSerial)).append("\n");
    sb.append("    licenseValidUntil: ").append(toIndentedString(licenseValidUntil)).append("\n");
    sb.append("    scenarios: ").append(toIndentedString(scenarios)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
sb.append("}");
return sb.toString();
}

/**
* Convert the given object to string with each line indented by 4 spaces
* (except the first line).
*/
private String toIndentedString(java.lang.Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}

}

