/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.documentreader.webclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.documentreader.webclient.model.PointArray;
import com.regula.documentreader.webclient.model.RectangleCoordinates;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;


/**
* AreaArray
*/
public class AreaArray {
        public static final String SERIALIZED_NAME_COUNT = "Count";
        @SerializedName(SERIALIZED_NAME_COUNT)
            private BigDecimal count;



        public static final String SERIALIZED_NAME_LIST = "List";
        @SerializedName(SERIALIZED_NAME_LIST)
                private List<RectangleCoordinates> list = new ArrayList<RectangleCoordinates>();



        public static final String SERIALIZED_NAME_POINTS = "Points";
        @SerializedName(SERIALIZED_NAME_POINTS)
                private List<PointArray> points = new ArrayList<PointArray>();




            public AreaArray withCount(BigDecimal count) {
              this.count = count;
              return this;
            }


    /**
        * Number of elements in List and Points
    * @return count
    **/
    
    

        public BigDecimal getCount() {
        return count;
    }


            public void setCount(BigDecimal count) {
            this.count = count;
        }


            public AreaArray withList(List<RectangleCoordinates> list) {
              this.list = list;
              return this;
            }

            public AreaArray addListItem(RectangleCoordinates listItem) {
                this.list.add(listItem);
                return this;
            }

    /**
        * Get list
    * @return list
    **/
    
    

        public  List<RectangleCoordinates> getList() {
        return list;
    }


            public void setList(List<RectangleCoordinates> list) {
            this.list = list;
        }


            public AreaArray withPoints(List<PointArray> points) {
              this.points = points;
              return this;
            }

            public AreaArray addPointsItem(PointArray pointsItem) {
                this.points.add(pointsItem);
                return this;
            }

    /**
        * Get points
    * @return points
    **/
    
    

        public  List<PointArray> getPoints() {
        return points;
    }


            public void setPoints(List<PointArray> points) {
            this.points = points;
        }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
        return true;
        }
        if (o == null || getClass() != o.getClass()) {
        return false;
        }
            AreaArray areaArray = (AreaArray) o;
            return Objects.equals(this.count, areaArray.count) &&
            Objects.equals(this.list, areaArray.list) &&
            Objects.equals(this.points, areaArray.points);
    }

    @Override
    public int hashCode() {
        return Objects.hash(count, list, points);
    }


@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class AreaArray {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    list: ").append(toIndentedString(list)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
sb.append("}");
return sb.toString();
}

/**
* Convert the given object to string with each line indented by 4 spaces
* (except the first line).
*/
private String toIndentedString(java.lang.Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}

}

