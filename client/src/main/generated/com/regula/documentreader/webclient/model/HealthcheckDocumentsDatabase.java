/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.documentreader.webclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;


/**
* Database information.
*/

public class HealthcheckDocumentsDatabase {
        public static final String SERIALIZED_NAME_ID = "id";
        @SerializedName(SERIALIZED_NAME_ID)
            private String id;



        public static final String SERIALIZED_NAME_VERSION = "version";
        @SerializedName(SERIALIZED_NAME_VERSION)
            private String version;



        public static final String SERIALIZED_NAME_EXPORT_DATE = "exportDate";
        @SerializedName(SERIALIZED_NAME_EXPORT_DATE)
            private LocalDate exportDate;



        public static final String SERIALIZED_NAME_DESCRIPTION = "description";
        @SerializedName(SERIALIZED_NAME_DESCRIPTION)
            private String description;




            public HealthcheckDocumentsDatabase withId(String id) {
              this.id = id;
              return this;
            }


    /**
        * Database identifier.
    * @return id
    **/
            @javax.annotation.Nullable
    
    

        public String getId() {
        return id;
    }


            public void setId(String id) {
            this.id = id;
        }


            public HealthcheckDocumentsDatabase withVersion(String version) {
              this.version = version;
              return this;
            }


    /**
        * Database version.
    * @return version
    **/
            @javax.annotation.Nullable
    
    

        public String getVersion() {
        return version;
    }


            public void setVersion(String version) {
            this.version = version;
        }


            public HealthcheckDocumentsDatabase withExportDate(LocalDate exportDate) {
              this.exportDate = exportDate;
              return this;
            }


    /**
        * Date of database creation.
    * @return exportDate
    **/
            @javax.annotation.Nullable
    
    

        public LocalDate getExportDate() {
        return exportDate;
    }


            public void setExportDate(LocalDate exportDate) {
            this.exportDate = exportDate;
        }


            public HealthcheckDocumentsDatabase withDescription(String description) {
              this.description = description;
              return this;
            }


    /**
        * Description of the database contents, such as the list of supported countries and documents.
    * @return description
    **/
            @javax.annotation.Nullable
    
    

        public String getDescription() {
        return description;
    }


            public void setDescription(String description) {
            this.description = description;
        }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
        return true;
        }
        if (o == null || getClass() != o.getClass()) {
        return false;
        }
            HealthcheckDocumentsDatabase healthcheckDocumentsDatabase = (HealthcheckDocumentsDatabase) o;
            return Objects.equals(this.id, healthcheckDocumentsDatabase.id) &&
            Objects.equals(this.version, healthcheckDocumentsDatabase.version) &&
            Objects.equals(this.exportDate, healthcheckDocumentsDatabase.exportDate) &&
            Objects.equals(this.description, healthcheckDocumentsDatabase.description);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, version, exportDate, description);
    }


@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class HealthcheckDocumentsDatabase {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    exportDate: ").append(toIndentedString(exportDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
sb.append("}");
return sb.toString();
}

/**
* Convert the given object to string with each line indented by 4 spaces
* (except the first line).
*/
private String toIndentedString(java.lang.Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}

}

