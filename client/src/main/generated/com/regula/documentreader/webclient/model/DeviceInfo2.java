/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.regula.documentreader.webclient.model;

import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import org.threeten.bp.OffsetDateTime;

/** DeviceInfo2 */
public class DeviceInfo2 {
  public static final String SERIALIZED_NAME_APP = "app";

  @SerializedName(SERIALIZED_NAME_APP)
  private String app;

  public static final String SERIALIZED_NAME_LICENSE_ID = "licenseId";

  @SerializedName(SERIALIZED_NAME_LICENSE_ID)
  private String licenseId;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "licenseType";

  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  private String licenseType;

  public static final String SERIALIZED_NAME_LICENSE_SERIAL = "licenseSerial";

  @SerializedName(SERIALIZED_NAME_LICENSE_SERIAL)
  private String licenseSerial;

  public static final String SERIALIZED_NAME_LICENSE_VALID_UNTIL = "licenseValidUntil";

  @SerializedName(SERIALIZED_NAME_LICENSE_VALID_UNTIL)
  private OffsetDateTime licenseValidUntil;

  public static final String SERIALIZED_NAME_SCENARIOS = "scenarios";

  @SerializedName(SERIALIZED_NAME_SCENARIOS)
  private List<String> scenarios = new ArrayList<String>();

  public static final String SERIALIZED_NAME_VERSION = "version";

  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_DOCUMENTS_DATABASE = "documentsDatabase";

  @SerializedName(SERIALIZED_NAME_DOCUMENTS_DATABASE)
  private DeviceInfo2DocumentsDatabase documentsDatabase;

  public DeviceInfo2 withApp(String app) {
    this.app = app;
    return this;
  }

  /**
   * Application name.
   *
   * @return app
   */
  public String getApp() {
    return app;
  }

  public void setApp(String app) {
    this.app = app;
  }

  public DeviceInfo2 withLicenseId(String licenseId) {
    this.licenseId = licenseId;
    return this;
  }

  /**
   * Unique license identifier.
   *
   * @return licenseId
   */
  @javax.annotation.Nullable
  public String getLicenseId() {
    return licenseId;
  }

  public void setLicenseId(String licenseId) {
    this.licenseId = licenseId;
  }

  public DeviceInfo2 withLicenseType(String licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * License type.
   *
   * @return licenseType
   */
  @javax.annotation.Nullable
  public String getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(String licenseType) {
    this.licenseType = licenseType;
  }

  public DeviceInfo2 withLicenseSerial(String licenseSerial) {
    this.licenseSerial = licenseSerial;
    return this;
  }

  /**
   * License serial number.
   *
   * @return licenseSerial
   */
  @javax.annotation.Nullable
  public String getLicenseSerial() {
    return licenseSerial;
  }

  public void setLicenseSerial(String licenseSerial) {
    this.licenseSerial = licenseSerial;
  }

  public DeviceInfo2 withLicenseValidUntil(OffsetDateTime licenseValidUntil) {
    this.licenseValidUntil = licenseValidUntil;
    return this;
  }

  /**
   * License validity date.
   *
   * @return licenseValidUntil
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLicenseValidUntil() {
    return licenseValidUntil;
  }

  public void setLicenseValidUntil(OffsetDateTime licenseValidUntil) {
    this.licenseValidUntil = licenseValidUntil;
  }

  public DeviceInfo2 withScenarios(List<String> scenarios) {
    this.scenarios = scenarios;
    return this;
  }

  public DeviceInfo2 addScenariosItem(String scenariosItem) {
    this.scenarios.add(scenariosItem);
    return this;
  }

  /**
   * List of supported scenarios.
   *
   * @return scenarios
   */
  @javax.annotation.Nullable
  public List<String> getScenarios() {
    return scenarios;
  }

  public void setScenarios(List<String> scenarios) {
    this.scenarios = scenarios;
  }

  public DeviceInfo2 withVersion(String version) {
    this.version = version;
    return this;
  }

  /**
   * Product version.
   *
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public DeviceInfo2 withDocumentsDatabase(DeviceInfo2DocumentsDatabase documentsDatabase) {
    this.documentsDatabase = documentsDatabase;
    return this;
  }

  /**
   * Get documentsDatabase
   *
   * @return documentsDatabase
   */
  @javax.annotation.Nullable
  public DeviceInfo2DocumentsDatabase getDocumentsDatabase() {
    return documentsDatabase;
  }

  public void setDocumentsDatabase(DeviceInfo2DocumentsDatabase documentsDatabase) {
    this.documentsDatabase = documentsDatabase;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceInfo2 deviceInfo2 = (DeviceInfo2) o;
    return Objects.equals(this.app, deviceInfo2.app)
        && Objects.equals(this.licenseId, deviceInfo2.licenseId)
        && Objects.equals(this.licenseType, deviceInfo2.licenseType)
        && Objects.equals(this.licenseSerial, deviceInfo2.licenseSerial)
        && Objects.equals(this.licenseValidUntil, deviceInfo2.licenseValidUntil)
        && Objects.equals(this.scenarios, deviceInfo2.scenarios)
        && Objects.equals(this.version, deviceInfo2.version)
        && Objects.equals(this.documentsDatabase, deviceInfo2.documentsDatabase);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        app,
        licenseId,
        licenseType,
        licenseSerial,
        licenseValidUntil,
        scenarios,
        version,
        documentsDatabase);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceInfo2 {\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    licenseId: ").append(toIndentedString(licenseId)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    licenseSerial: ").append(toIndentedString(licenseSerial)).append("\n");
    sb.append("    licenseValidUntil: ").append(toIndentedString(licenseValidUntil)).append("\n");
    sb.append("    scenarios: ").append(toIndentedString(scenarios)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    documentsDatabase: ").append(toIndentedString(documentsDatabase)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
