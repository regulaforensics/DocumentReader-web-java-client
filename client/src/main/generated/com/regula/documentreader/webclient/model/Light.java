/*
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.documentreader.webclient.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;


public class Light {

        /**
        * Lighting schemes are off
        */
    public static final   int   OFF = 0;

        /**
        * OVI scheme
        */
    public static final   int   OVI = 1;

        /**
        * Upper/lower lighters of white light scheme
        */
    public static final   int   WHITE_TOP = 2;

        /**
        * Side lighters of white light scheme
        */
    public static final   int   WHITE_SIDE = 4;

        /**
        * General white light without separate control of side and upper/lower lighters scheme
        */
    public static final   int   WHITE_FRONT = 8388608;

        /**
        * Upper/lower and side lighters of white light scheme
        */
    public static final   int   WHITE = 6;

        /**
        * Upper/lower lighters of IR light scheme
        */
    public static final   int   IR_TOP = 8;

        /**
        * Side lighters of IR light scheme
        */
    public static final   int   IR_SIDE = 16;

        /**
        * General IR light without separate control of side and upper/lower lighters scheme
        */
    public static final   int   IR_FRONT = 16777216;

        /**
        * Upper/lower and side lighters of IR light scheme
        */
    public static final   int   IR = 24;

        /**
        * general white image converted to grayscale
        */
    public static final   int   WHITE_GRAY = 33554432;

        /**
        * General UV light scheme
        */
    public static final   int   UV = 128;

        /**
        * OVD light for hologram visualization
        */
    public static final   int   OVD = 67108864;

        /**
        * Video detection light for internal use only
        */
    public static final   int   VIDEODETECTION = 134217728;

        /**
        * Light IR 870 oblique
        */
    public static final   int   IR_870_OBL = 268435456;

        /**
        * IR luminescence
        */
    public static final   int   IR_LUMINESCENCE = 256;

        /**
        * Left lighter of white coaxial light scheme
        */
    public static final   int   AXIAL_WHITE_LEFT = 1024;

        /**
        * Right lighter of white coaxial light scheme
        */
    public static final   int   AXIAL_WHITE_RIGHT = 2048;

        /**
        * Coaxial white light without separate control of left and right lighters scheme
        */
    public static final   int   AXIAL_WHITE_FRONT = 512;

        /**
        * IR720
        */
    public static final   int   IR_720 = 4096;

        /**
        * IR940
        */
    public static final   int   IR_940 = 8192;

        /**
        * Right and left lighters of white coaxial light scheme
        */
    public static final   int   AXIAL_WHITE_FULL = 3072;

        /**
        * For internal use
        */
    public static final   int   RAW_DATA = 2147483648;

        /**
        * For internal use
        */
    public static final   int   RAW_DATA_GRBG = 2415919104;

        /**
        * For internal use
        */
    public static final   int   RAW_DATA_GBGR = 2684354560;

        /**
        * For internal use
        */
    public static final   int   RAW_DATA_RGGB = 2952790016;

        /**
        * For internal use
        */
    public static final   int   RAW_DATA_BGGR = 3221225472;

        /**
        * Transmitted
        */
    public static final   int   TRANSMITTED = 32;

        /**
        * Transmitted IR
        */
    public static final   int   TRANSMITTED_IR = 64;

        /**
        * Transmitted AntiStokes
        */
    public static final   int   ANTI_STOKES = 65536;

        /**
        * Transmitted IR940
        */
    public static final   int   TRANSMITTED_IR940 = 16384;

        /**
        * OVD right
        */
    public static final   int   OVD_RIGHT = 262144;

        /**
        * OVD left
        */
    public static final   int   OVD_LEFT = 131072;

        /**
        * IR 700
        */
    public static final   int   IR_700 = 32768;

        /**
        * Front IR870 (mod. 8803)
        */
    public static final   int   IR_870 = 16777216;

        /**
        * OVD light (hologram visualization) (mod. 8850)
        */
    public static final   int   HOLO = 67108864;

        /**
        * For internal use
        */
    public static final   int   IR_BOTTOM = 64;

        /**
        * For internal use
        */
    public static final   int   WHITE_BOTTOM = 32;

        /**
        * UVÐ¡ 254 (mod. 88X0)
        */
    public static final   int   UVC = 524288;

        /**
        * UVB 313 (mod. 88X0)
        */
    public static final   int   UVB = 1048576;

        /**
        * White oblique light
        */
    public static final   int   WHITE_OBL = 2097152;

        /**
        * For internal use
        */
    public static final   int   WHITE_SPECIAL = 4194304;

}

